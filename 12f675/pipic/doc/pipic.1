.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PIPIC 1"
.TH PIPIC 1 "2013-07-27" "version 20130727" "Raspberry Pi"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pipic \-  send commands and read data from PIC
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBpipic\fR \fB\-a\fR i2c address [\fB\-c\fR command [\fB\-d\fR data b|w|2w] | \fB\-r\fR b|w|2w] 
[\fB\-h\fR] [\fB\-v\fR] [\fB\-V\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBpipic\fR is used to send commands to a \s-1PIC\s0 processor on i2c bus connected
to Raspberry Pi. The commands are simply one data byte and can be followed by
one to four bytes of parameter data. The \s-1PIC\s0 processor has the necessary
command interpretation loop programmed in. After the command has been
executed the possible results can be read with option \fB\-r\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-a\fR chip address on i2c bus
.PP
\&\fB\-c\fR send command byte to \s-1PIC\s0
.PP
\&\fB\-d\fR byte, word or two words of data after command byte
.PP
\&\fB\-r\fR read byte, word or two words from \s-1PIC\s0
.PP
\&\fB\-h\fR display a short help text
.PP
\&\fB\-v\fR verbose
.PP
\&\fB\-V\fR print version
.SH "COMMANDS"
.IX Header "COMMANDS"
0x00 do nothing
.PP
0x01 0xNN read byte from file and write it to output buffer
.PP
0x10 clear GPIO0=0 output
.PP
0x11 clear GPIO1=0 output
.PP
0x14 clear GPIO4=0 output
.PP
0x15 clear GPIO5=0 output
.PP
0x20 set GPIO0=1 output
.PP
0x21 set GPIO1=1 output
.PP
0x24 set GPIO4=1 output
.PP
0x25 set GPIO5=1 output
.PP
0x30 0xNN write byte to \s-1GPIO\s0
.PP
0x31 0xNN write byte to \s-1TRISIO\s0
.PP
0x40 read analog input \s-1AN0\s0
.PP
0x41 read analog input \s-1AN1\s0
.PP
0x43 read analog input \s-1AN3\s0
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Set \s-1GPIO5\s0 output to \*(L"1\*(R", chip address 0x26 (or 38) and command 0x25 (or 37)
.PP
\&\fBpipic\fR \fB\-a\fR 38 \fB\-c\fR 37
.PP
This assumes that \s-1GP5\s0 has been configured as digital output.
.SH "WARNING"
.IX Header "WARNING"
No checking is done where the data is written. Could make some hardware 
unusable.
.SH "AUTHORS"
.IX Header "AUTHORS"
Jaakko Koivuniemi
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIi2cdetect\fR\|(8), \fIi2cset\fR\|(8), \fIi2cget\fR\|(8)
