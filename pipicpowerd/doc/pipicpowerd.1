.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PIPICPOWERD 1"
.TH PIPICPOWERD 1 "2014-03-30" "version 20140330" "Raspberry Pi"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pipicpowerd \-  monitor and control Raspberry Pi power supply with i2c
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBpipicpowerd\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBpipicpowerd\fR is used to monitor and control Raspberry Pi power supply
with i2c bus. Initially the power is applied to the Raspberry Pi by pushing
the red button on the power supply. The daemon is started with command
.PP
\&\fBservice\fR \fIpipicpowerd\fR \fIstart\fR
.PP
and can be stopped any time with
.PP
\&\fBservice\fR \fIpipicpowerd\fR \fIstop\fR
.PP
The operation of the daemon can be checked from the log file.
At the start four test bytes are written to the power supply and read back.
If this data flow test fails the daemon exits. One reason for this
failure could be that the internal counter of \s-1PIC\s0 was not yet reset with
command \fBpipic\fR \fB\-a\fR 26 \fB\-c\fR 50.
Otherwise the event triggered tasks on the \s-1PIC\s0 are disabled and the 
internal timer is read. If the file \fI/var/lib/pipicpowerd/pwrup\fR exists
the \s-1PIC\s0 internal timer is used to estimate time now and the system time is
set accordingly.
.PP
In the main
loop the battery voltage is read at predetermined intervals. During the 
reading the red \s-1LED\s0 on the power supply is turned on. If the battery
voltage is too low the power supply is programmed to a delayed power down and 
the \fIshutdown\fR\|(8) command is called to put the Raspberry Pi into a halt state.
Note that high value read from \s-1PIC\s0 means low battery voltage because of
the inverting transistor circuit.
.PP
The event register from the \s-1PIC\s0 is read at programmed intervals to see if
the power button has been pressed. If this is the case the red \s-1LED\s0 is turned
on and if the button is pressed again the shut down and delayed power down is 
initiated. If the file \fI/var/lib/pipicpowerd/wakeup\fR exits the \s-1PIC\s0 is 
programmed to wake up later in future at the given time. The time delay
depends on how accurately the \s-1PIC\s0 internal counter cycle length is known.
This can be determined for example with command 
\&\fBpipictest\fR \fB\-a\fR 26 \fB\-c\fR \fB\-n\fR 10000.
.PP
The shut down and power down can be initiated by sending \s-1HUP\s0 signal to 
the daemon with \fBkill\fR \fB\-s\fR \fI\s-1SIGHUP\s0\fR. 
The file \fI/var/lib/pipicpowerd/pwrdown\fR has to exists for \s-1HUP\s0 signal power
down to be executed.
.SH "FILES"
.IX Header "FILES"
\&\fI/etc/logrotate.d/pipicpowerd\fR    Log rotation configuration file.
.PP
\&\fI/etc/init.d/pipicpowerd\fR         Init script.
.PP
\&\fI/etc/pipicpowerd_config\fR         Configuration file.
.PP
\&\fI/usr/sbin/pipicpowerd\fR           Daemon code.
.PP
\&\fI/var/lib/pipicpowerd/battery\fR    Most recent battery value 1023\-0.
.PP
\&\fI/var/lib/pipicpowerd/pwrup\fR      If this file exists approximative system time is set at power up.
.PP
\&\fI/var/lib/pipicpowerd/pwrdown\fR    If this file exists power down with \s-1SIGINT\s0.
.PP
\&\fI/var/lib/pipicpowerd/resetime\fR   Time of last \s-1PIC\s0 timer reset hh:mm.
.PP
\&\fI/var/lib/pipicpowerd/sleeptime\fR   If this file exists and has hh:mm, this time is used to start system shutdown and power down.
.PP
\&\fI/var/lib/pipicpowerd/volts\fR      Most recent battery voltage.
.PP
\&\fI/var/lib/pipicpowerd/wakeup\fR     Next wakeup time hh:mm.
.PP
\&\fI/var/log/pipicpowerd.log\fR        Log file.
.PP
\&\fI/var/run/pipicpowerd.pid\fR        \s-1PID\s0 file.
.SH "WARNING"
.IX Header "WARNING"
No check is done where the query data is written. Could make some hardware 
unusable.
.SH "AUTHORS"
.IX Header "AUTHORS"
Jaakko Koivuniemi
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIpipic\fR\|(1), \fIpipicfile\fR\|(1), \fIpipictest\fR\|(1), \fIi2cdetect\fR\|(8), \fIi2cset\fR\|(8), \fIi2cget\fR\|(8)
