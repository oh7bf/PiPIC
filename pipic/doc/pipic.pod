=head1 NAME

pipic -  send commands and read data from PiPIC

=head1 SYNOPSIS

B<pipic> B<-a> i2c address [B<-c> command [B<-d> data]] [B<-r> b|w|W] 
[B<-h>] [B<-v>] [B<-V>]

=head1 DESCRIPTION

The B<pipic> is used to send commands to a PIC processor on i2c bus connected
to Raspberry Pi. The command is one byte of data and is given with option
B<-c> as a hexadecimal 0x00 - 0xFF. The command byte can be followed by
one to four bytes of parameter data. The parameter is given with switch
B<-d> as a decimal integer with 'b', 'w' or 'W' at end. The PIC processor 
has the necessary command interpretation loop programmed in. After the 
command has been executed the possible results can be read with option B<-r>
by specifying the length of data 'b' for byte, 'w' for 16-bit word and
'W' for 32-bit word. 

=head1 OPTIONS

B<-a> chip address on i2c bus

B<-c> send command byte to PIC

B<-d> data byte (b), 16-bit word (w) or 32-bit word (W) after command byte

B<-r> read byte (b), 16-bit word (w) or 32-bit word (W) from PIC

B<-h> display a short help text

B<-v> verbose

B<-V> print version

=head1 COMMANDS

0x00 do nothing

0x01 0xNN read byte from file address and write it to output buffer

0x02 0xNNNNNNNN write four bytes to transmit buffer, used for debugging

0x03 0xNN read EEPROM address

0x04 0xNNNN write to EEPROM address

0x05 read TMR1 as 16-bit word

0x10 clear GPIO0=0 output

0x11 clear GPIO1=0 output

0x14 clear GPIO4=0 output

0x15 clear GPIO5=0 output

0x20 set GPIO0=1 output

0x21 set GPIO1=1 output

0x24 set GPIO4=1 output

0x25 set GPIO5=1 output

0x30 0xNN write byte to GPIO

0x31 0xNN write byte to TRISIO

0x32 0xNN AND GPIO with byte

0x33 0xNN OR GPIO with byte

0x34 0xNN XOR GPIO with byte

0x40 read analog input AN0

0x41 read analog input AN1

0x43 read analog input AN3

0x50 reset timer

0x51 read timer

0x60 stop timed task1

0x61 start timed task1 

0x62 0x00NNNNNN set task1 counting down time

0x63 0xNNNN set task1 command and one parameter byte

0x64 0xNN set how many times task1 is repeated

0x70 stop timed task2

0x71 start timed task2 

0x72 0x00NNNNNN set task2 counting down time

0x73 0xNNNN set task2 command and one parameter byte

0x74 0xNN set how many times task2 is repeated

0xA0 disable event triggered tasks

0xA1 enable event triggered tasks

0xA2 read event register

0xA3 reset event register

0xA4 0xNNNN GP0 input at zero triggered task command and parameter byte

0xA5 0xNNNN GP1 input at zero triggered task command and parameter byte

0xA6 0xNNNN GP4 input at zero triggered task command and parameter byte

0xA7 0xNNNN GP5 input at zero triggered task command and parameter byte

0xA8 0xNNNN comparator triggered task command and parameter byte

=head1 EXAMPLE

Test i2c communication 

B<pipic> B<-a> 0x26 B<-c> 0x02 B<-d> 1375211866W B<-r> W

Set GPIO5 output to "1", chip address 0x26 (or 38) and command 0x25 (or 37)

B<pipic> B<-a> 0x26 B<-c> 0x25 

This assumes that GP5 has been configured as digital output. 

Read status register at address 0x03 from PIC12f675, chip address 0x26 (or 38)

B<pipic> B<-a> 26 B<-c> 1 B<-d> 3b B<-r> b B<-v>

Read analog voltage from AN0

B<pipic> B<-a> 26 B<-c> 40 B<-r> w

This assumes that GP0 has been configured as analog input.

Reset internal timer

B<pipic> B<-a> 26 B<-c> 50 

Read internal timer

B<pipic> B<-a> 26 B<-c> 51 B<-r> W

Write 'Pi' to EEPROM. First 'P' to memory location 0x00

B<pipic> B<-a> 26 B<-c> 04 B<-d> 80w

then 'i' to memory location 0x01 (1*256+105=361)

B<pipic> B<-a> 26 B<-c> 04 B<-d> 361w 

Blink LED connected to GP4 three times. First set delay to 2 timer
cycles (usually one timer cycle is 0.524288 s).

B<pipic> B<-a> 26 B<-c> 62 B<-d> 2W

The XOR command 0x34 together with 0x10 for GPIO4 gives 13328 in decimal.

B<pipic> B<-a> 26 B<-c> 63 B<-d> 13328w 

Repeate XOR command on GPIO4 six times (programmed as minus one)

B<pipic> B<-a> 26 B<-c> 64 B<-d> 5b

Start task

B<pipic> B<-a> 26 B<-c> 61 

Read event register

B<pipic> B<-a> 26 B<-c> A2 B<-r> b B<-v>

Reset event register

B<pipic> B<-a> 26 B<-c> A3 

Switch on/off LED connected to GP4. The XOR command 0x34 together with 0x10 
for GPIO4 gives 13328 in decimal. The switch connected to GP5. 

B<pipic> B<-a> 26 B<-c> A7 B<-d> 13328w 

Enable event triggered tasks

B<pipic> B<-a> 26 B<-c> A1
 
=head1 FILES

I</etc/modprobe.d/i2c.conf>

This file should have a line like 

options i2c_bcm2708 baudrate=20000

which sets the SCL clock to 20 kHz.

I</etc/modprobe.d/raspi-blacklist.conf>

Check that I<i2c_bcm2708> is commented out in this file.

=head1 WARNING

No checking is done where the data is written. Could make some hardware 
unusable.

=head1 AUTHORS

Jaakko Koivuniemi 

=head1 SEE ALSO

pipicfile(1), i2cdetect(8), i2cset(8), i2cget(8)

